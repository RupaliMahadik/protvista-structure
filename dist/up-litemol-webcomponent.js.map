{"version":3,"file":"up-litemol-webcomponent.js","sources":["../src/main.js"],"sourcesContent":["const loadComponent = function () {\n    class UpLitemolWebcomponent extends HTMLElement {\n\n        constructor() {\n            super();\n            // We can't use the shadow DOM as the LiteMol component interacts with the\n            // document DOM.\n            this.loadMolecule = this\n                .loadMolecule\n                .bind(this);\n            this.loadStructureTable = this\n                .loadStructureTable\n                .bind(this);\n            this.innerHTML = `\n                <style>\n                    :root {\n                        --blue: 0,112,155;\n                    }\n                    .jsmol-container, .table-container {\n                        width: 640px; \n                        height: 480px;\n                        overflow-y: auto;\n                        position: relative;\n                        display:inline-block;\n                    }\n                    .table-container tr {\n                        cursor: pointer;\n                    }\n                    .table-container tr.active {\n                        background-color: rgba(var(--blue), 0.3);;\n                    }\n                </style>\n            `;\n        }\n\n        getAccession() {\n            return this.getAttribute('accession');\n        }\n\n        setAccession(accession) {\n            return this.setAttribute('accession', accession);\n        }\n\n        connectedCallback() {\n            this.tableDiv = document.createElement('div');\n            this.tableDiv.className = 'table-container';\n            const jsmolDiv = document.createElement('div');\n            jsmolDiv.className = 'jsmol-container';\n            jsmolDiv.id = 'app';\n            this.appendChild(jsmolDiv);\n            this.appendChild(this.tableDiv);\n            this.loadLiteMol();\n            this\n                .loadEntry()\n                .then(entry => {\n                    const pdbEntries = entry\n                        .dbReferences\n                        .filter(dbref => dbref.type === 'PDB');\n                    this.loadStructureTable(pdbEntries);\n                    this.selectMolecule(pdbEntries[0].id);\n                });\n            // this.loadMolecule(this.id);\n        }\n\n        attributeChangedCallback(attrName, oldVal, newVal) {}\n\n        async loadEntry() {\n            try {\n                return await(await fetch(`https://www.ebi.ac.uk/proteins/api/proteins/${this.getAccession()}`)).json();\n            } catch (e) {\n                console.log(`Couldn't load UniProt entry`, e);\n            }\n        }\n\n        loadStructureTable(pdbEntries) {\n            const html = `\n                <table>\n                    <thead><th>PDB Entry</th><th>Method</th><th>Resolution</th><th>Chain</th></thead>\n                    <tbody>\n                        ${pdbEntries\n                .map(d => `\n                            <tr id=\"${d.id}\" class=\"pdb-row\">\n                                <td>${d.id}</td>\n                                <td>${d.properties.method}</td>\n                                <td>${d.properties.resolution}</td>\n                                <td>${d.properties.chains}</td>\n                            </tr>\n                        `)\n                .join('')}\n                    </tbody>\n                </table>\n            `;\n            this.tableDiv.innerHTML = html;\n            this\n                .querySelectorAll('.pdb-row')\n                .forEach(row => row.addEventListener('click', (e) => this.selectMolecule(row.id)));\n        }\n\n        selectMolecule(id) {\n            this\n                .querySelectorAll('.active')\n                .forEach(row => row.classList.remove('active'));\n            document\n                .getElementById(id)\n                .classList\n                .add('active');\n            this.loadMolecule(id);\n        }\n\n        loadLiteMol() {\n            const Plugin = LiteMol.Plugin;\n            this._liteMol = Plugin.create({\n                target: '#app',\n                viewportBackground: '#fff',\n                layoutState: {\n                    hideControls: true\n                },\n                allowAnalytics: false\n            });\n        }\n\n        loadMolecule(_id) {\n            this\n                ._liteMol\n                .clear();\n            this\n                ._liteMol\n                .loadMolecule({\n                    _id, format: 'cif', // or pdb, sdf, binarycif/bcif\n                    url: `https://www.ebi.ac.uk/pdbe/static/entry/${_id.toLowerCase()}_updated.cif`,\n                    // instead of url, it is possible to use data: \"string\" or ArrayBuffer (for\n                    // BinaryCIF) loaded molecule and model can be accessed after load using\n                    // plugin.context.select(modelRef/moleculeRef)[0], for example\n                    // plugin.context.select('1tqn-molecule')[0]\n                    moleculeRef: _id + '-molecule',\n                    modelRef: _id + '-model',\n                    // Use this if you want to create your own visual. doNotCreateVisual: true\n                })\n                .then(() => {\n                    // Use this (or a modification of this) for custom visualization: const style =\n                    // LiteMol.Bootstrap.Visualization.Molecule.Default.ForType.get('BallsAndSticks'\n                    // ); const t = plugin.createTransform(); t.add(id + '-model',\n                    // LiteMol.Bootstrap.Entity.Transformer.Molecule.CreateVisual, { style: style })\n                    // plugin.applyTransform(t);\n                    console.log('Molecule loaded');\n                })\n                .catch(e => {\n                    console.error(e);\n                });\n        }\n\n    }\n    customElements.define('up-litemol-webcomponent', UpLitemolWebcomponent);\n}\n\n// Conditional loading of polyfill\nif (window.customElements) {\n    loadComponent();\n} else {\n    document\n        .addEventListener('WebComponentsReady', function () {\n            loadComponent();\n        });\n}"],"names":["loadComponent","UpLitemolWebcomponent","loadMolecule","bind","loadStructureTable","innerHTML","getAttribute","accession","setAttribute","tableDiv","document","createElement","className","jsmolDiv","id","appendChild","loadLiteMol","loadEntry","then","pdbEntries","entry","dbReferences","filter","dbref","type","selectMolecule","attrName","oldVal","newVal","fetch","getAccession","json","log","html","map","d","properties","method","resolution","chains","join","querySelectorAll","forEach","row","addEventListener","e","classList","remove","getElementById","add","Plugin","LiteMol","_liteMol","create","_id","clear","format","toLowerCase","catch","error","HTMLElement","define","window","customElements"],"mappings":"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"}