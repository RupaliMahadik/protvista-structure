{"version":3,"file":"uuw-litemol-component.js","sources":["../src/main.js"],"sourcesContent":["const loadComponent = function () {\n    class UuwLitemolComponent extends HTMLElement {\n\n        constructor() {\n            super();\n            // We can't use the shadow DOM as the LiteMol component interacts with the\n            // document DOM.\n            this.loadMolecule = this\n                .loadMolecule\n                .bind(this);\n            this.loadStructureTable = this\n                .loadStructureTable\n                .bind(this);\n            const styleTag = document.createElement('style');\n            this.appendChild(styleTag);\n            styleTag.innerHTML = `\n                :root {\n                    --blue: 0,112,155;\n                    --width: 100%;\n                }\n                uuw-litemol-component {\n                    display:flex;\n                }\n                .jsmol-container, .table-container {\n                    width: var(--width);\n                    height: 480px;\n                    position: relative;\n                }\n                .table-container table {\n                    width:100%;\n                    height: 480px;\n                    border-collapse: collapse;\n                }\n                .table-container thead {\n                    min-height: 3em;\n                  }\n                  \n                .table-container th, .table-container td {\n                    box-sizing: border-box;\n                    flex: 1 0 10em;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                }\n                .table-container table, .table-container thead, .table-container tbody, .table-container tfoot {\n                    display: flex;\n                    flex-direction: column;\n                }\n                .table-container tr {\n                    display: flex;\n                    flex: 1 0;\n                }\n                .table-container tbody {\n                    overflow-y: auto;\n                }\n                .table-container tbody tr {\n                    cursor: pointer;\n                }\n                .table-container tbody tr:hover {\n                    background-color: rgba(var(--blue), 0.15);;\n                }\n                .table-container tr.active {\n                    background-color: rgba(var(--blue), 0.3);;\n                }\n            `;\n        }\n\n        getAccession() {\n            return this.getAttribute('accession');\n        }\n\n        setAccession(accession) {\n            return this.setAttribute('accession', accession);\n        }\n\n        connectedCallback() {\n            this.tableDiv = document.createElement('div');\n            this.tableDiv.className = 'table-container';\n            const jsmolDiv = document.createElement('div');\n            jsmolDiv.className = 'jsmol-container';\n            jsmolDiv.id = 'app';\n            this.appendChild(jsmolDiv);\n            this.appendChild(this.tableDiv);\n            this.loadLiteMol();\n            this\n                .loadEntry()\n                .then(entry => {\n                    const pdbEntries = entry\n                        .dbReferences\n                        .filter(dbref => dbref.type === 'PDB');\n                    this.loadStructureTable(pdbEntries);\n                    this.selectMolecule(pdbEntries[0].id);\n                });\n        }\n\n        attributeChangedCallback(attrName, oldVal, newVal) {\n            console.log('changed', attrName);\n        }\n\n        async loadEntry() {\n            try {\n                return await(await fetch(`https://www.ebi.ac.uk/proteins/api/proteins/${this.getAccession()}`)).json();\n            } catch (e) {\n                console.log(`Couldn't load UniProt entry`, e);\n            }\n        }\n\n        loadStructureTable(pdbEntries) {\n            const html = `\n                <table>\n                    <colgroup>\n                        <col syle=\"width: 100px\">\n                        <col syle=\"width: 100px\">\n                        <col syle=\"width: 100px\">\n                        <col syle=\"width: auto\">\n                    </colgroup>\n                    <thead><th>PDB Entry</th><th>Method</th><th>Resolution</th><th>Chain</th></thead>\n                    <tbody>\n                        ${pdbEntries\n                .map(d => `\n                            <tr id=\"${d.id}\" class=\"pdb-row\">\n                                <td>${d.id}</td>\n                                <td>${d.properties.method}</td>\n                                <td>${d.properties.resolution}</td>\n                                <td>${d.properties.chains}</td>\n                            </tr>\n                        `)\n                .join('')}\n                    </tbody>\n                </table>\n            `;\n            this.tableDiv.innerHTML = html;\n            this\n                .querySelectorAll('.pdb-row')\n                .forEach(row => row.addEventListener('click', (e) => this.selectMolecule(row.id)));\n        }\n\n        selectMolecule(id) {\n            this\n                .querySelectorAll('.active')\n                .forEach(row => row.classList.remove('active'));\n            document\n                .getElementById(id)\n                .classList\n                .add('active');\n            this.loadMolecule(id);\n        }\n\n        loadLiteMol() {\n            const Plugin = LiteMol.Plugin;\n            this._liteMol = Plugin.create({\n                target: '#app',\n                viewportBackground: '#fff',\n                layoutState: {\n                    hideControls: true\n                },\n                allowAnalytics: false\n            });\n        }\n\n        loadMolecule(_id) {\n            this\n                ._liteMol\n                .clear();\n            this\n                ._liteMol\n                .loadMolecule({\n                    _id, format: 'cif', // or pdb, sdf, binarycif/bcif\n                    url: `https://www.ebi.ac.uk/pdbe/static/entry/${_id.toLowerCase()}_updated.cif`,\n                    // instead of url, it is possible to use data: \"string\" or ArrayBuffer (for\n                    // BinaryCIF) loaded molecule and model can be accessed after load using\n                    // plugin.context.select(modelRef/moleculeRef)[0], for example\n                    // plugin.context.select('1tqn-molecule')[0]\n                    moleculeRef: _id + '-molecule',\n                    modelRef: _id + '-model',\n                    // Use this if you want to create your own visual. doNotCreateVisual: true\n                })\n                .then(() => {\n                    // Use this (or a modification of this) for custom visualization: const style =\n                    // LiteMol.Bootstrap.Visualization.Molecule.Default.ForType.get('BallsAndSticks'\n                    // ); const t = plugin.createTransform(); t.add(id + '-model',\n                    // LiteMol.Bootstrap.Entity.Transformer.Molecule.CreateVisual, { style: style })\n                    // plugin.applyTransform(t);\n                    console.log('Molecule loaded');\n                })\n                .catch(e => {\n                    console.error(e);\n                });\n        }\n\n    }\n    customElements.define('uuw-litemol-component', UuwLitemolComponent);\n}\n\n// Conditional loading of polyfill\nif (window.customElements) {\n    loadComponent();\n} else {\n    document\n        .addEventListener('WebComponentsReady', function () {\n            loadComponent();\n        });\n}"],"names":["loadComponent","UuwLitemolComponent","loadMolecule","bind","loadStructureTable","styleTag","document","createElement","appendChild","innerHTML","getAttribute","setAttribute","tableDiv","className","jsmolDiv","id","loadLiteMol","loadEntry","then","pdbEntries","entry","dbReferences","filter","dbref","type","selectMolecule","log","fetch","getAccession","json","html","map","d","properties","method","resolution","chains","join","querySelectorAll","forEach","row","addEventListener","classList","remove","getElementById","add","Plugin","LiteMol","_liteMol","create","clear","format","_id","toLowerCase","catch","error","HTMLElement","define","window","customElements"],"mappings":"imEAAMA,EAAgB,UAAY,IACxBC,2BAEY,UAAA;;mEAILC,aAAe,EACfA,YADe,CAEfC,IAFe,GAJV,GAOLC,mBAAqB,EACrBA,kBADqB,CAErBD,IAFqB,GAPhB,IAUJE,GAAWC,SAASC,aAATD,CAAuB,OAAvBA,WACZE,iBACIC,kzDAmDE,OACJ,MAAKC,YAAL,CAAkB,WAAlB,yCAGa,OACb,MAAKC,YAAL,CAAkB,WAAlB,+CAGS,iBACXC,SAAWN,SAASC,aAATD,CAAuB,KAAvBA,CADA,MAEXM,SAASC,UAAY,iBAFV,IAGVC,GAAWR,SAASC,aAATD,CAAuB,KAAvBA,IACRO,UAAY,iBAJL,GAKPE,GAAK,KALE,MAMXP,cANW,MAOXA,YAAY,KAAKI,SAPN,MAQXI,aARW,MAUXC,YACAC,KAAK,WAAS,IACLC,GAAaC,EACdC,YADcD,CAEdE,MAFcF,CAEP,kBAAwB,KAAfG,KAAMC,IAFR,CAAAJ,IAGdhB,qBAJM,GAKNqB,eAAeN,EAAW,CAAXA,EAAcJ,GAP1C,sDAW+C,SACvCW,IAAI,mNAKWC,qDAAqD,KAAKC,YAAL,EAArDD,gCAA6EE,0FAExFH,iMAIe,YACrBI,gdAUQX,EACTY,GADSZ,CACL,4DACiBa,EAAEjB,iEACFiB,EAAEjB,iDACFiB,EAAEC,UAAFD,CAAaE,qDACbF,EAAEC,UAAFD,CAAaG,yDACbH,EAAEC,UAAFD,CAAaI,2EANzB,CAAAjB,EASTkB,IATSlB,CASJ,EATIA,gFAaTP,SAASH,WAxBa,MA0BtB6B,iBAAiB,YACjBC,QAAQ,kBAAOC,GAAIC,gBAAJD,CAAqB,OAArBA,CAA8B,iBAAO,GAAKf,cAAL,CAAoBe,EAAIzB,EAAxB,CAArC,CAAAyB,CAFpB,4CAKe,MAEVF,iBAAiB,WACjBC,QAAQ,kBAAOC,GAAIE,SAAJF,CAAcG,MAAdH,CAAqB,QAArBA,CAFpB,EADe,UAKVI,kBACAF,UACAG,IAAI,SAPM,MAQV3C,qDAGK,IACJ4C,GAASC,QAAQD,YAClBE,SAAWF,EAAOG,MAAPH,CAAc,QAClB,MADkB,oBAEN,MAFM,aAGb,gBAAA,CAHa,kBAAA,CAAdA,yCAUF,MAETE,SACAE,OAHS,MAKTF,SACA9C,aAAa,MAAA,CACLiD,OAAQ,KADH;+CAEsCC,EAAIC,WAAJD,iBAFtC;;;;YAOGA,EAAM,WAPT,UAQAA,EAAM;AARN,GAWblC,KAAK,UAAM,SAMAQ,IAAI,kBAnBpB,GAqBK4B,MAAM,WAAK,SACAC,QAtBhB,UAlK0BC,4BA6LnBC,OAAO,0BA9L1B;AAkMIC,OAAOC,4BAIFlB,iBAAiB,qBAAsB,UAAY,IADxD"}